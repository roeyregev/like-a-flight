version: '3.8'

services:
  database:
    build:
      context: ./Database
      dockerfile: Dockerfile
     
      # Image name: 
    image: roeyregev/like-a-flight-db:1.0

    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mQdfflZrCHRDeChGBnnXOOffhTJnNNnB
      MYSQL_DATABASE: like-a-flight
      MYSQL_USER: root
      MYSQL_PASSWORD: mQdfflZrCHRDeChGBnnXOOffhTJnNNnB

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile

       # Image name: 
    image: roeyregev/like-a-flight-backend:1.0

    ports:
      - "4000:4000"
    environment:
      NODE_ENV: production
      PORT: 4000
      MYSQL_HOST: viaduct.proxy.rlwy.net
      MYSQL_USER: root
      MYSQL_PASSWORD: mQdfflZrCHRDeChGBnnXOOffhTJnNNnB
      MYSQL_DATABASE: like-a-flight
    depends_on:
      - database

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile

       # Image name: 
    image: roeyregev/like-a-flight-frontend:1.0

    ports:
      - "3000:3000"





# ------------------------ Assaf's example:----------------------
# version: '3.8'

# # All of our containers. Each container is one service
# services: 

#   # Our rest api service: 
#   like-a-flight-backend: 

#     # Image name: 
#     image: roeyregev/like-a-flight-backend:1.0

#     # Build the image from Dockerfile located in the current directory:
#     build: /backend

#     # Container name: 
#     container_name: like-a-flight-backend-container

#     # Port binding (host:container):
#     ports:
#       - 5000:4000

#     # On crash - restart container, unless manually stopped:
#     restart: unless-stopped
